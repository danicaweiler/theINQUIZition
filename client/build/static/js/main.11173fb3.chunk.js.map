{"version":3,"sources":["Components/MainPage/MainPage.js","Components/CreateQuiz/CreateQuiz.js","Components/SelectQuiz/SelectQuiz.js","Components/Quiz/Quiz.js","Components/Quiz/QuizSession.js","Components/Quiz/Question.js","App.js","index.js"],"names":["withRouter","props","confettiArray","map","nums","className","id","to","CreateQuiz","state","questionList","questions","title","sessionId","question","validator","SimpleReactValidator","onAddBtnClick","bind","submitForm","QuestionInput","setTitle","setQuestion","setAnswerA","setAnswerB","setAnswerC","setAnswerD","this","hideMessages","validQuestions","push","answerA","answerB","answerC","answerD","correctAnswer","newList","newElem","length","setState","allValid","data","axios","post","then","res","history","pathname","search","showMessages","forceUpdate","name","type","onChange","e","placeholder","setCorrectAnswer","defaultChecked","target","value","index","Number","which","message","onClick","React","Component","columns","heading","property","quizId","QuizList","propertyAsKey","col","item","alert","SelectQuiz","qs","require","username","score","Leaderboard","parse","location","ignoreQueryPrefix","useState","navigator","clipboard","writeText","readOnly","QuizSession","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","setScore","showScore","setShowScore","answerOption","nextQuestion","handleAnswerOptionClick","useQuery","URLSearchParams","useLocation","get","setAnswer","App","setResponse","useEffect","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11173fb3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport \"./confetti.css\";\r\n\r\nfunction MainPage(props) {\r\n  //set the amount of confetti\r\n  const numConfetti = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\r\n  const confettiArray = numConfetti.map((nums) => (\r\n    <div className='confetti' key={nums} />\r\n  ));\r\n\r\n  return (\r\n    <div id='mainpage'>\r\n      <div className='game-header'>\r\n      <Link to='/'>\r\n          <h1>The InQUIZition</h1>\r\n        </Link>\r\n      </div>\r\n      <div className=\"game-body\">\r\n      <div className='confetti-container'>{confettiArray}</div>\r\n      <h1>Ready for some friendly competition?</h1>\r\n        <Link to='/create_quiz'>\r\n          <button className='main-button'>Build Your Own</button>\r\n        </Link>\r\n        <Link to='/select_quiz'>\r\n          <button className='main-button alternate'>\r\n            Play a Pre-built Quiz\r\n          </button>\r\n        </Link>\r\n        </div>\r\n        <div className=\"form-body\">\r\n        <h1 className='alternate'>How it Works</h1><ul>\r\n        <li>Build your own quiz, or use one we have made </li>\r\n        <li> Get a shareable link to send to your friends </li>\r\n        <li>The faster you answer right, the more points you get </li>\r\n        <li>\r\n          Watch the leaderboard change as you and your friends compete for the\r\n          highest score\r\n        </li></ul>\r\n      </div>\r\n    </div>\r\n   \r\n  );\r\n}\r\nexport default withRouter(MainPage);\r\n","import React from \"react\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport axios from \"axios\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nclass CreateQuiz extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questionList: [],\r\n      questions: [],\r\n      title: \"\",\r\n      sessionId: \"1\",\r\n      question: \"\",\r\n    };\r\n\r\n    this.validator = new SimpleReactValidator();\r\n    this.onAddBtnClick = this.onAddBtnClick.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.QuestionInput = this.QuestionInput.bind(this);\r\n    this.setTitle = this.setTitle.bind(this);\r\n\r\n    this.setQuestion = this.setQuestion.bind(this);\r\n    this.setAnswerA = this.setAnswerA.bind(this);\r\n    this.setAnswerB = this.setAnswerB.bind(this);\r\n    this.setAnswerC = this.setAnswerC.bind(this);\r\n    this.setAnswerD = this.setAnswerD.bind(this);\r\n  }\r\n\r\n  onAddBtnClick() {\r\n    this.validator.hideMessages();\r\n\r\n    var validQuestions = this.state.questions;\r\n    var newQuestionBase = {\r\n      question: \"\",\r\n      answerA: \"\",\r\n      answerB: \"\",\r\n      answerC: \"\",\r\n      answerD: \"\",\r\n      correctAnswer: \"A\" \r\n    };\r\n    validQuestions.push(newQuestionBase);\r\n\r\n    var newList = this.state.questionList;\r\n    var newElem = this.QuestionInput(newList.length + 1);\r\n    newList.push(newElem);\r\n\r\n    this.setState({\r\n      questionList: newList,\r\n      questions: validQuestions,\r\n    });\r\n  }\r\n\r\n  submitForm() {\r\n    this.validator.hideMessages();\r\n    if (this.validator.allValid()) {\r\n      const data = {\r\n        title: this.state.title,\r\n        questions: this.state.questions\r\n      };\r\n      axios.post(\"/api/v1/create-quiz\", data).then((res) => {\r\n         this.state.sessionId = res.data;\r\n      });\r\n      this.props.history.push({\r\n        pathname: '/quiz',\r\n        search:'id=' + this.state.sessionId\r\n      })\r\n      this.props.history.push(\"/quiz?id=\" + this.state.sessionId);\r\n    } else {\r\n      this.validator.showMessages();\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  QuestionInput(props) {\r\n    return (\r\n      <div key={props}>\r\n        <label>\r\n          Question {props}:<br />\r\n          <input\r\n            name='question'\r\n            type='text'\r\n            onChange={(e) => this.setQuestion(e, props)}\r\n            className='question-input main'\r\n            placeholder='Your question here'\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          <input type='radio' id='answerA' name={props} onChange={(e) => this.setCorrectAnswer(e, props, \"A\")} defaultChecked /> A\r\n          <input\r\n            name='A'\r\n            onChange={(e) => this.setAnswerA(e, props)}\r\n            className='question-input'\r\n            placeholder='Your first answer here'\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          <input type='radio' id='answerB' name={props} onChange={(e) => this.setCorrectAnswer(e, props, \"B\")}/> B\r\n          <input\r\n            name='B'\r\n            onChange={(e) => this.setAnswerB(e, props)}\r\n            className='question-input'\r\n            placeholder='Your second answer here'\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          <input type='radio' id='answerC' name={props}  onChange={(e) => this.setCorrectAnswer(e, props, \"C\")}/> C\r\n          <input\r\n            name='C'\r\n            onChange={(e) => this.setAnswerC(e, props)}\r\n            className='question-input'\r\n            placeholder='Your third answer here'\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          <input type='radio' id='answerD' name={props}\r\n            onChange={(e) => this.setCorrectAnswer(e, props, \"D\")} /> D\r\n          <input\r\n            name='D'\r\n            onChange={(e) => this.setAnswerD(e, props)}\r\n            className='question-input'\r\n            placeholder='Your fourth answer here'\r\n          />\r\n        </label>\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  setTitle(e) {\r\n    this.setState({ title:  e.target.value });\r\n  }\r\n\r\n  setQuestion(e, props) {\r\n    var index = Number(props); \r\n    var validQuestions = this.state.questions;\r\n    validQuestions[index -1].question = e.target.value;\r\n\r\n    this.setState({\r\n      questions: validQuestions\r\n    });\r\n\r\n    this.setState({ question: e.target.value + props });\r\n  }\r\n\r\n  setAnswerA(e, props) {\r\n    var index = Number(props);\r\n    var validQuestions = this.state.questions;\r\n    validQuestions[index - 1].answerA = e.target.value;\r\n\r\n    this.setState({\r\n      questions: validQuestions,\r\n    });\r\n  }\r\n\r\n  setAnswerB(e, props) {\r\n    var index = Number(props); \r\n    var validQuestions = this.state.questions;\r\n    validQuestions[index -1].answerB = e.target.value;\r\n\r\n    this.setState({\r\n      questions: validQuestions,\r\n    });\r\n  }\r\n  \r\n  setAnswerC(e, props) {\r\n    var index = Number(props);\r\n    var validQuestions = this.state.questions;\r\n    validQuestions[index -1].answerC = e.target.value;\r\n\r\n    this.setState({\r\n      questions: validQuestions,\r\n    });\r\n  }\r\n\r\n  setAnswerD(e, props) {\r\n    var index = Number(props);\r\n    var validQuestions = this.state.questions;\r\n    validQuestions[index -  1].answerD = e.target.value;\r\n\r\n    this.setState({\r\n      questions: validQuestions,\r\n    });\r\n  }\r\n\r\n  setCorrectAnswer(e, props, which) {\r\n    var index = Number(props);\r\n    var validQuestions = this.state.questions;\r\n    validQuestions[index - 1].correctAnswer = which;\r\n\r\n    this.setState({\r\n      questions: validQuestions,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='createQuiz'>\r\n        <div className='game-header'>\r\n        <Link to='/'>\r\n          <h1>The InQUIZition</h1>\r\n        </Link>\r\n        </div>\r\n        <div className='game-body alternate'>\r\n          <form className='form-body'>\r\n            <h1 className=\"alternate\">Build Your Quiz</h1>\r\n            <div className='form-group'>\r\n              <label>\r\n                Quiz Title:\r\n                <input\r\n                  className='question-input'\r\n                  value={this.state.title}\r\n                  onChange={this.setTitle}\r\n                  type='text'\r\n                  name='title'\r\n                />\r\n                {this.validator.message(\r\n                  \"title\",\r\n                  this.state.title,\r\n                  \"required|min:3|max:120\"\r\n                )}\r\n              </label>\r\n            <br />\r\n            <br />\r\n            <hr />\r\n            <br />\r\n            <div>{this.state.questionList}</div>\r\n            <button\r\n              type='button'\r\n              className='main-button alternate'\r\n              onClick={this.onAddBtnClick}>\r\n              Add a Question\r\n            </button>\r\n            <br />\r\n            <button\r\n              type='button'\r\n              className='main-button'\r\n              onClick={this.submitForm}>\r\n              Done! Make it!\r\n            </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateQuiz);\r\n","import React from \"react\";\r\n\r\nimport { Route, Redirect, withRouter, Link } from \"react-router-dom\";\r\n\r\nfunction SelectQuiz() {\r\n  return (\r\n  <div id='selectQuiz'>\r\n    <div className='game-header'>\r\n      <Link to='/'>\r\n        <h1>The InQUIZition</h1>\r\n      </Link>\r\n    </div>\r\n    <div className='game-body alternate'>\r\n      <form className='form-body'>\r\n        <h1 className=\"alternate\">Select A Quiz</h1>\r\n        <div className='form-group'>\r\n        <QuizList\r\n          columns={columns}\r\n          data={data}\r\n          propertyAsKey='quizId' //The data property to be used as a key\r\n        />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\n//Columns defines table headings and properties to be placed into the body\r\nconst columns = [{ heading: 'Select A Quiz', property: 'title' }];\r\nconst data = [{ title: 'All About Edward Scissor Hands', quizId: '1234abcd' }, { title: 'Jackson 5', quizId: '1234abcd' }]\r\n\r\nconst QuizList = ({ columns, data, propertyAsKey }) => {\r\n\r\nconst onPlayClick = (id) => {\r\n  alert(`Hello, lets play the quiz by id: ${id}!`);\r\n}\r\n\r\nreturn (<table className='table'>\r\n        <thead>\r\n            <tr>{columns.map(col => <th key={`header-${col.heading}`}>{col.heading}</th>)}</tr>\r\n        </thead>\r\n        <tbody>\r\n            {data.map(item =>\r\n                <tr key={`${item[propertyAsKey]}-row`}>\r\n                    {columns.map((col) => (\r\n                    <td key={`${item[propertyAsKey]}-${col.property}`}>\r\n                      {item[col.property]}\r\n                    <br />\r\n                    <Link to= {\r\n                      'quiz?id=' + item.quizId\r\n                    }>\r\n                    <button type='button' id={item.quizId} onClick={() => {\r\n                        onPlayClick(item.quizId);\r\n                      }}>Play!</button></Link>\r\n                </td>))}\r\n              </tr>\r\n            )}\r\n        </tbody>\r\n    </table>);\r\n};\r\n\r\nexport default SelectQuiz;\r\n","import React, { useState } from \"react\";\r\nimport { Link, withRouter, useLocation } from \"react-router-dom\";\r\nvar qs = require('qs');\r\n\r\nfunction Quiz(props) {\r\nconst id = qs.parse(props.location.search, { ignoreQueryPrefix: true }).id; //props.location.search;\r\nconst [sessionId, setSessionId] = useState(id);\r\n\r\n  return (\r\n    <div id='quiz'>\r\n      <div className='game-header'>\r\n        <Link to='/'>\r\n          <h1>The InQUIZition</h1>\r\n        </Link>\r\n      </div>\r\n      <div className='game-body alternate'>\r\n        <div className='form-body alternate'>\r\n          <h1 className='alternate'>Custom Title Here</h1>\r\n          <br />\r\n          <label>\r\n            <p>Share this link with you friends!</p>\r\n            <input\r\n              className='question-input' //populate from sessionID\r\n              type='text'\r\n              name='share-link'\r\n              value= {'theinquizition.herokuapp.com/quiz?id=' + sessionId}\r\n              onClick={() => {\r\n                navigator.clipboard.writeText('theinquizition.herokuapp.com/quiz?id=' + sessionId);\r\n               }}\r\n              readOnly\r\n            />\r\n          </label>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <label>\r\n            <p>Enter your name:</p>\r\n          <input\r\n              type='text'\r\n              name='username'\r\n            />\r\n            <br/>\r\n          </label>\r\n          <button type='button' className='main-button'>\r\n            Let's Play!\r\n          </button>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <h1 className='alternate'>Leaderboard</h1>\r\n          <Leaderboard\r\n            columns={columns}\r\n            data={data}\r\n            propertyAsKey='username' //The data property to be used as a key\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//Columns defines table headings and properties to be placed into the body\r\nconst columns = [\r\n  { heading: \"Username\", property: \"username\" },\r\n  { heading: \"Score\", property: \"score\" },\r\n];\r\n//Data is the array of objects to be placed into the table\r\nconst data = [\r\n  { username: \"Sabrina\", score: \"60\" },\r\n  { username: \"Max\", score: \"2\" },\r\n];\r\n\r\nconst Leaderboard = ({ columns, data, propertyAsKey }) => (\r\n  <table className='table'>\r\n    <thead>\r\n      <tr>\r\n        {columns.map((col) => (\r\n          <th key={`header-${col.heading}`}>{col.heading}</th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {data.map((item) => (\r\n        <tr key={`${item[propertyAsKey]}-row`}>\r\n          {columns.map((col) => (\r\n            <td key={`${item[propertyAsKey]}-${col.property}`}>\r\n              {item[col.property]}\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default withRouter(Quiz);\r\n","import React, { useState } from \"react\";\r\n\r\nfunction QuizSession() {\r\n  const questions = [\r\n    {\r\n      questionText: \"What is the capital of Canada?\",\r\n      answerOptions: [\r\n        { answerText: \"Toronto\", isCorrect: false },\r\n        { answerText: \"Ottawa\", isCorrect: true },\r\n        { answerText: \"Vancouver\", isCorrect: false },\r\n        { answerText: \"Sarnia\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"The iPhone was created by which company?\",\r\n      answerOptions: [\r\n        { answerText: \"Apple\", isCorrect: true },\r\n        { answerText: \"Intel\", isCorrect: false },\r\n        { answerText: \"Amazon\", isCorrect: false },\r\n        { answerText: \"Microsoft\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"How many Harry Potter books are there?\",\r\n      answerOptions: [\r\n        { answerText: \"1\", isCorrect: false },\r\n        { answerText: \"4\", isCorrect: false },\r\n        { answerText: \"6\", isCorrect: false },\r\n        { answerText: \"7\", isCorrect: true },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(true);\r\n  const handleAnswerOptionClick = (isCorrect) => {\r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n    } else {\r\n      setShowScore(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className='app'>\r\n      {showScore ? (\r\n        <div className='score-section'>\r\n          You scored {score} out of {questions.length}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className='question-section'>\r\n            <div className='question-count'>\r\n              <span>Question {currentQuestion + 1}</span>\r\n            </div>\r\n            <div className='question-text'>\r\n              {questions[currentQuestion].questionText}\r\n            </div>\r\n          </div>\r\n          <div className='answer-section'>\r\n            {questions[currentQuestion].answerOptions.map((answerOption) => (\r\n              <button\r\n                onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>\r\n                {answerOption.answerText}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default QuizSession;\r\n","import React, { useState } from 'react';\r\nimport { Link, withRouter, useLocation } from \"react-router-dom\";\r\n\r\nconst useQuery= () => {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction Question(props) {\r\n  const id =  useQuery().get('id');\r\n  const question =  useQuery().get('question');\r\n  const [sessionId, setSessionId] = useState(id);\r\n  const [questionNum, setQuestionNum] = useState(question);\r\n\r\n  return (\r\n    <div id='quiz'>\r\n      <div className='game-header'>\r\n        <Link to='/'>\r\n          <h1>The InQUIZition</h1>\r\n        </Link>\r\n      </div>\r\n      <div className='game-body alternate'>\r\n        <div className='form-body'>\r\n          <h1 className=\"alternate\">Custom Title Here</h1><br/>\r\n          <div className='form-group'>\r\n          <label>\r\n            <p className='question-input main question'>Question goes here...</p>\r\n          </label><br />\r\n          <input className=\"answer\" type='radio' id='answerA' name='answer' onChange={(e) => this.setAnswer(e, \"A\")} defaultChecked /> Answer A<br />\r\n          <input className=\"answer\" type='radio' id='answerB' name='answer' onChange={(e) => this.setAnswer(e, \"B\")}  /> Answer B<br />\r\n          <input className=\"answer\" type='radio' id='answerC' name='answer' onChange={(e) => this.setAnswer(e, \"C\")}  /> Answer C<br />\r\n          <input className=\"answer\" type='radio' id='answerD' name='answer' onChange={(e) => this.setAnswer(e, \"D\")}  /> Answer D<br />\r\n          <br />\r\n          <div className=\"right\">\r\n          <button type='button' className='main-button small'>\r\n            Next Question \r\n          </button></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Question);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport MainPage from \"./Components/MainPage/MainPage\";\r\nimport CreateQuiz from \"./Components/CreateQuiz/CreateQuiz\";\r\nimport SelectQuiz from \"./Components/SelectQuiz/SelectQuiz\";\r\nimport Quiz from \"./Components/Quiz/Quiz\";\r\nimport QuizSession from \"./Components/Quiz/QuizSession\";\r\nimport Question from \"./Components/Quiz/Question\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  //TEMP WILL NEED TO BE MOVED INTO IT'S OWN FILE with useEffect\r\n  const [response, setResponse] = useState([]);\r\n\r\n  //This will get the reponse from the server when the component loads\r\n  useEffect(() => {\r\n    axios.get(\"/api/v1/say-something\").then((res) => {\r\n      setResponse(res.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/' exact component={() => <MainPage />} />\r\n          <Route path='/create_quiz' exact component={() => <CreateQuiz />} />\r\n          <Route path='/select_quiz' exact component={() => <SelectQuiz />} />\r\n          <Route path='/quiz' exact component={() => <Quiz />} />\r\n          <Route path='/quiz_session' exact component={() => <QuizSession />} />\r\n          <Route path='/question' exact component={() => <Question />} />\r\n        </Switch>\r\n      </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\n    //  <hr />\r\n   //   <h4>Server response for testing</h4>\r\n   //   <p>{response.body}</p>\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}