{"version":3,"sources":["Components/MainPage/MainPage.js","Components/CreateQuiz/CreateQuiz.js","Components/SelectQuiz/SelectQuiz.js","Components/Quiz/Quiz.js","Components/Quiz/QuizSession.js","App.js","index.js"],"names":["withRouter","props","confettiArray","map","nums","className","id","to","CreateQuiz","state","questionList","questions","title","sessionId","question","validator","SimpleReactValidator","onAddBtnClick","bind","submitForm","QuestionInput","setTitle","setQuestion","setAnswerA","setAnswerB","setAnswerC","setAnswerD","this","hideMessages","validQuestions","push","answerA","answerB","answerC","answerD","correctAnswer","newList","newElem","length","setState","allValid","data","a","axios","post","then","res","sessionID","history","pathname","search","showMessages","forceUpdate","name","type","onChange","e","placeholder","setCorrectAnswer","defaultChecked","target","value","index","Number","which","message","onClick","React","Component","columns","heading","property","QuizList","propertyAsKey","col","item","_id","SelectQuiz","useState","quizId","setData","useEffect","get","body","quizzes","qs","require","Leaderboard","sort","b","score","parse","location","ignoreQueryPrefix","leaderboard","setLeaderboard","refText","useRef","params","quizID","console","log","users","navigator","clipboard","writeText","readOnly","ref","username","current","localStorage","setItem","userID","c","d","currentQuestionNumber","setCurrentQuestionNumber","setScore","isEnd","setIsEnd","err","error","handleAnswerOptionClick","answer","getItem","nextQuestion","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7837d492.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nfunction MainPage(props) {\r\n  //set the amount of confetti\r\n  const numConfetti = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\r\n  const confettiArray = numConfetti.map((nums) => (\r\n    <div className='confetti' key={nums} />\r\n  ));\r\n\r\n  return (\r\n    <div id='mainpage'>\r\n      <div className='game-header'>\r\n      <Link to='/'>\r\n          <h1>The InQUIZition</h1>\r\n        </Link>\r\n      </div>\r\n      <div className=\"game-body\">\r\n      <div className='confetti-container'>{confettiArray}</div>\r\n      <h1>Ready for some friendly competition?</h1>\r\n        <Link to='/create_quiz'>\r\n          <button className='main-button'>Build Your Own</button>\r\n        </Link>\r\n        <Link to='/select_quiz'>\r\n          <button className='main-button alternate'>\r\n            Play a Pre-built Quiz\r\n          </button>\r\n        </Link>\r\n        </div>\r\n        <div className=\"form-body\">\r\n        <h1 className='alternate'>How it Works</h1><ul>\r\n        <li>Build your own quiz, or use one we have made </li>\r\n        <li> Get a shareable link to send to your friends </li>\r\n        <li>\r\n          Watch the leaderboard change as you and your friends compete for the\r\n          highest score\r\n        </li></ul>\r\n      </div>\r\n    </div>\r\n   \r\n  );\r\n}\r\nexport default withRouter(MainPage);\r\n","import React from \"react\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport axios from \"axios\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nclass CreateQuiz extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questionList: [],\r\n      questions: [],\r\n      title: \"\",\r\n      sessionId: \"1\",\r\n      question: \"\",\r\n    };\r\n\r\n    this.validator = new SimpleReactValidator();\r\n    this.onAddBtnClick = this.onAddBtnClick.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.QuestionInput = this.QuestionInput.bind(this);\r\n    this.setTitle = this.setTitle.bind(this);\r\n\r\n    this.setQuestion = this.setQuestion.bind(this);\r\n    this.setAnswerA = this.setAnswerA.bind(this);\r\n    this.setAnswerB = this.setAnswerB.bind(this);\r\n    this.setAnswerC = this.setAnswerC.bind(this);\r\n    this.setAnswerD = this.setAnswerD.bind(this);\r\n  }\r\n\r\n  onAddBtnClick() {\r\n    this.validator.hideMessages();\r\n\r\n    var validQuestions = this.state.questions;\r\n    var newQuestionBase = {\r\n      question: \"\",\r\n      answerA: \"\",\r\n      answerB: \"\",\r\n      answerC: \"\",\r\n      answerD: \"\",\r\n      correctAnswer: \"A\" \r\n    };\r\n    validQuestions.push(newQuestionBase);\r\n\r\n    var newList = this.state.questionList;\r\n    var newElem = this.QuestionInput(newList.length + 1);\r\n    newList.push(newElem);\r\n\r\n    this.setState({\r\n      questionList: newList,\r\n      questions: validQuestions,\r\n    });\r\n  }\r\n\r\n  submitForm() {\r\n    this.validator.hideMessages();\r\n    if (this.validator.allValid()) {\r\n      const data = {\r\n        title: this.state.title,\r\n        questions: this.state.questions\r\n      };\r\n\r\n      (async () => {\r\n        await axios.post('/api/v1/create-quiz', data\r\n        ).then((res) => {\r\n           this.setState({ sessionId: res.data.sessionID })\r\n\r\n           this.props.history.push({\r\n            pathname: '/quiz',\r\n            search:'id=' + this.state.sessionId\r\n          })\r\n          this.props.history.push(\"/quiz?id=\" + this.state.sessionId);\r\n          });\r\n      })()\r\n    \r\n    } else {\r\n      this.validator.showMessages();\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  QuestionInput(props) {\r\n    return (\r\n      <div key={props}>\r\n        <label>\r\n          Question {props}:<br />\r\n          <input\r\n            name='question'\r\n            type='text'\r\n            onChange={(e) => this.setQuestion(e, props)}\r\n            className='question-input main'\r\n            placeholder='Your question here'\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          <input type='radio' id='answerA' name={props} onChange={(e) => this.setCorrectAnswer(e, props, \"A\")} defaultChecked /> A\r\n          <input\r\n            name='A'\r\n            onChange={(e) => this.setAnswerA(e, props)}\r\n            className='question-input'\r\n            placeholder='Your first answer here'\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          <input type='radio' id='answerB' name={props} onChange={(e) => this.setCorrectAnswer(e, props, \"B\")}/> B\r\n          <input\r\n            name='B'\r\n            onChange={(e) => this.setAnswerB(e, props)}\r\n            className='question-input'\r\n            placeholder='Your second answer here'\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          <input type='radio' id='answerC' name={props}  onChange={(e) => this.setCorrectAnswer(e, props, \"C\")}/> C\r\n          <input\r\n            name='C'\r\n            onChange={(e) => this.setAnswerC(e, props)}\r\n            className='question-input'\r\n            placeholder='Your third answer here'\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          <input type='radio' id='answerD' name={props}\r\n            onChange={(e) => this.setCorrectAnswer(e, props, \"D\")} /> D\r\n          <input\r\n            name='D'\r\n            onChange={(e) => this.setAnswerD(e, props)}\r\n            className='question-input'\r\n            placeholder='Your fourth answer here'\r\n          />\r\n        </label>\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  setTitle(e) {\r\n    this.setState({ title:  e.target.value });\r\n  }\r\n\r\n  setQuestion(e, props) {\r\n    var index = Number(props); \r\n    var validQuestions = this.state.questions;\r\n    validQuestions[index -1].question = e.target.value;\r\n\r\n    this.setState({\r\n      questions: validQuestions\r\n    });\r\n\r\n    this.setState({ question: e.target.value + props });\r\n  }\r\n\r\n  setAnswerA(e, props) {\r\n    var index = Number(props);\r\n    var validQuestions = this.state.questions;\r\n    validQuestions[index - 1].answerA = e.target.value;\r\n\r\n    this.setState({\r\n      questions: validQuestions,\r\n    });\r\n  }\r\n\r\n  setAnswerB(e, props) {\r\n    var index = Number(props); \r\n    var validQuestions = this.state.questions;\r\n    validQuestions[index -1].answerB = e.target.value;\r\n\r\n    this.setState({\r\n      questions: validQuestions,\r\n    });\r\n  }\r\n  \r\n  setAnswerC(e, props) {\r\n    var index = Number(props);\r\n    var validQuestions = this.state.questions;\r\n    validQuestions[index -1].answerC = e.target.value;\r\n\r\n    this.setState({\r\n      questions: validQuestions,\r\n    });\r\n  }\r\n\r\n  setAnswerD(e, props) {\r\n    var index = Number(props);\r\n    var validQuestions = this.state.questions;\r\n    validQuestions[index -  1].answerD = e.target.value;\r\n\r\n    this.setState({\r\n      questions: validQuestions,\r\n    });\r\n  }\r\n\r\n  setCorrectAnswer(e, props, which) {\r\n    var index = Number(props);\r\n    var validQuestions = this.state.questions;\r\n    validQuestions[index - 1].correctAnswer = which;\r\n\r\n    this.setState({\r\n      questions: validQuestions,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='createQuiz'>\r\n        <div className='game-header'>\r\n        <Link to='/'>\r\n          <h1>The InQUIZition</h1>\r\n        </Link>\r\n        </div>\r\n        <div className='game-body alternate'>\r\n          <form className='form-body'>\r\n            <h1 className=\"alternate\">Build Your Quiz</h1>\r\n            <div className='form-group'>\r\n              <label>\r\n                Quiz Title:\r\n                <input\r\n                  className='question-input'\r\n                  value={this.state.title}\r\n                  onChange={this.setTitle}\r\n                  type='text'\r\n                  name='title'\r\n                />\r\n                {this.validator.message(\r\n                  \"title\",\r\n                  this.state.title,\r\n                  \"required|min:3|max:120\"\r\n                )}\r\n              </label>\r\n            <br />\r\n            <br />\r\n            <hr />\r\n            <br />\r\n            <div>{this.state.questionList}</div>\r\n            <button\r\n              type='button'\r\n              className='main-button alternate'\r\n              onClick={this.onAddBtnClick}>\r\n              Add a Question\r\n            </button>\r\n            <br />\r\n            <button\r\n              type='button'\r\n              className='main-button'\r\n              onClick={this.submitForm}>\r\n              Done! Make it!\r\n            </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateQuiz);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n//Columns defines table headings and properties to be placed into the body\r\nconst columns = [{ heading: 'Select A Quiz', property: 'title' }];\r\n\r\nfunction SelectQuiz() {\r\n  const [data, setData] = useState( [{ title: 'Loading...', quizId: 'abcd' }]);\r\n  \r\n  useEffect(() => {\r\n    (async () => {\r\n      await axios.get('/api/v1/get-all-quizzes').then((res) => {\r\n         setData(res.data.body.quizzes)\r\n        });\r\n    })()\r\n  }, [])\r\n\r\n  return (\r\n    <div id='selectQuiz'>\r\n      <div className='game-header'>\r\n        <Link to='/'>\r\n          <h1>The InQUIZition</h1>\r\n        </Link>\r\n      </div>\r\n      <div className='game-body alternate'>\r\n        <form className='form-body'>\r\n          <h1 className=\"alternate\">Select A Quiz</h1>\r\n          <div className='form-group'>\r\n            <QuizList\r\n              columns={columns}\r\n              data={data}\r\n              propertyAsKey='quizId' //The data property to be used as a key\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst QuizList = ({ columns, data, propertyAsKey }) => {\r\n  return (<table className='table'>\r\n    <thead>\r\n      <tr>{columns.map(col => <th key={`header-${col.heading}`}>{col.heading}</th>)}</tr>\r\n    </thead>\r\n    <tbody>\r\n      {data.map(item =>\r\n        <tr key={`${item[propertyAsKey]}-row`}>\r\n          {columns.map((col) => (\r\n            <td key={`${item[propertyAsKey]}-${col.property}`}>\r\n              {item[col.property]}\r\n              <br />\r\n              <Link to={\r\n                'quiz?id=' + item._id\r\n              }>\r\n                <button type='button' id={item._id}>Play!</button></Link>\r\n            </td>))}\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  </table>);\r\n};\r\n\r\nexport default SelectQuiz;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nvar qs = require('qs');\r\n\r\nfunction Quiz(props) {\r\n  const quizId = qs.parse(props.location.search, { ignoreQueryPrefix: true }).id;\r\n  const [leaderboard, setLeaderboard] = useState([]);\r\n  const [title, setTitle] = useState(\"Loading...\");\r\n  const refText=useRef(null);\r\n\r\n  //Leaderboard\r\n  useEffect(() => {\r\n    (async () => {\r\n      await axios.get('/api/v1/get-leaderboard', {\r\n        params: {\r\n          quizID: quizId\r\n        }\r\n      }).then((res) => {\r\n        console.log(res.data)\r\n        setLeaderboard(res.data.body.users)\r\n        console.log(leaderboard)\r\n      });\r\n    })()\r\n  }, [])\r\n\r\n  //Title\r\n  useEffect(() => {\r\n    (async () => {\r\n      await axios.get('/api/v1/get-quiz', {\r\n        params: {\r\n          quizID: quizId\r\n        }\r\n      }).then((res) => {\r\n        setTitle(res.data.body.title)\r\n      });\r\n    })()\r\n  }, [])\r\n\r\n  return (\r\n    <div id='quiz'>\r\n      <div className='game-header'>\r\n        <Link to='/'>\r\n          <h1>The InQUIZition</h1>\r\n        </Link>\r\n      </div>\r\n      <div className='game-body alternate'>\r\n        <div className='form-body alternate'>\r\n          <h1 className='alternate'>{title}</h1>\r\n          <br />\r\n          <label>\r\n            <p>Share this link with you friends!</p>\r\n            <input\r\n              className='question-input' //populate from quizId\r\n              type='text'\r\n              name='share-link'\r\n              value={'theinquizition.herokuapp.com/quiz?id=' + quizId }\r\n              onClick={() => {\r\n                navigator.clipboard.writeText('theinquizition.herokuapp.com/quiz?id=' + quizId);\r\n              }}\r\n              readOnly\r\n            />\r\n          </label>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <label>\r\n            <p>Enter your name:</p>\r\n            <input\r\n              type='text'\r\n              name='username'\r\n              ref={refText}\r\n            />\r\n            <br />\r\n          </label>\r\n          <Link to={\r\n            '/quiz_session?id=' + quizId\r\n          }>\r\n            <button type='button' className='main-button' onClick={() => {\r\n              const name = refText.current.value;\r\n              const data = {\r\n                username: name,\r\n                quizID: quizId\r\n              };\r\n              axios.post(\"/api/v1/create-user\", data).then((res) => {\r\n                localStorage.setItem('UserID', res.data.body.userID);\r\n              });\r\n            }}>\r\n              Let's Play!\r\n          </button></Link>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <h1 className='alternate'>Leaderboard</h1>\r\n          <Leaderboard\r\n            columns={columns}\r\n            data={\r\n              leaderboard.length > 0 ? leaderboard : [{ username: \"\", score: 0 }]\r\n            }\r\n            propertyAsKey='username' //The data property to be used as a key\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//Columns defines table headings and properties to be placed into the body\r\nconst columns = [\r\n  { heading: \"Username\", property: \"username\" },\r\n  { heading: \"Score\", property: \"score\" },\r\n];\r\n\r\nconst Leaderboard = ({ columns, data, propertyAsKey }) => (\r\n  <table className='table'>\r\n    <thead>\r\n      <tr>\r\n        {columns.map((col) => (\r\n          <th key={`header-${col.heading}`}>{col.heading}</th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n   \r\n      {data.sort((a,b) => a.score < b.score ? 1 : -1).map((item) => (\r\n        <tr key={`${item[propertyAsKey]}-row`}>\r\n          {columns.map((col) => (\r\n            <td key={`${item[propertyAsKey]}-${col.property}`}>\r\n              {item[col.property]}\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default withRouter(Quiz);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nvar qs = require('qs');\r\n\r\nfunction QuizSession(props) {\r\n  //set the amount of confetti\r\n  const numConfetti = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\r\n  const confettiArray = numConfetti.map((nums) => (\r\n    <div className='confetti' key={nums} />\r\n  ));\r\n\r\n  const quizId = useState(qs.parse(props.location.search, { ignoreQueryPrefix: true }).id);\r\n  const [question, setQuestion] = useState({\r\n    body: {\r\n      question: \"Loading...\", a: [\"\", false], b: [\"\", true], c: [\"\", false], d: [\"\", false]\r\n    }\r\n  });\r\n\r\n  const [currentQuestionNumber, setCurrentQuestionNumber] = useState(1);\r\n  const [score, setScore] = useState(0);\r\n  const [isEnd, setIsEnd] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const res = axios.get('/api/v1/getQuestion', {\r\n        params: {\r\n          \"quizID\": quizId,\r\n          \"Number\": currentQuestionNumber\r\n        }\r\n      }).then((res) => {\r\n        setQuestion(res.data);\r\n      });\r\n    } catch (err) {\r\n      // Handle Error Here\r\n      console.error(err);\r\n    }\r\n  }, [])\r\n\r\n  const handleAnswerOptionClick = (answer) => {\r\n\r\n    const data = {\r\n      userID: localStorage.getItem(\"UserID\"),\r\n      quizID: quizId,\r\n      Number: currentQuestionNumber,\r\n      answer: answer,\r\n      score: 10\r\n    };\r\n\r\n    (async () => {\r\n      await axios.post('/api/v1/save-answer', data\r\n      ).then((res) => {\r\n        setScore(res.data.body.score)\r\n      });\r\n    })()\r\n\r\n    const nextQuestion = currentQuestionNumber + 1;\r\n    const res = axios.get('/api/v1/getQuestion', {\r\n      params: {\r\n        \"quizID\": quizId,\r\n        \"Number\": nextQuestion\r\n      }\r\n    }).then((res) => {\r\n      \r\n      console.log(res.data.body);\r\n      if (res.data.body !== \"end\") {\r\n        setQuestion(res.data)\r\n        if (question != null) {\r\n          setCurrentQuestionNumber(nextQuestion);\r\n        }\r\n      } else {\r\n        setIsEnd(true);\r\n      }\r\n    })\r\n  };\r\n\r\n\r\n  return (\r\n    <div id='quiz'>\r\n      <div className='game-header'>\r\n        <Link to='/'>\r\n          <h1>The InQUIZition</h1>\r\n        </Link>\r\n      </div>\r\n      <div className='game-body alternate' >\r\n        <div className='form-body'>\r\n          {isEnd ? (\r\n            <div className='answer-section'>\r\n              <p>Congrats! You scored {score} points</p>\r\n              <div className='confetti-container'>{confettiArray}</div>\r\n              <Link to={`quiz?id=${quizId[0]}`}>\r\n                <button type='button' className=\"main-button alternate\" id=\"Back\">Go To Leaderboard</button>\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className='question-section answer-section'>\r\n                <div className=\"question-input main question\">\r\n                  <span>Question {currentQuestionNumber}</span>\r\n                </div>\r\n                <label>\r\n                  <p className=\"question-input main question large\">{question.body.question}</p>\r\n                </label>\r\n              </div>\r\n              <div className='answer-section'>\r\n                <button className=\"answer main-button\"\r\n                  onClick={() => handleAnswerOptionClick(\"A\")}>\r\n                  {question.body.a[0]}\r\n                </button>\r\n                <button className=\"answer main-button alternate\"\r\n                  onClick={() => handleAnswerOptionClick(\"B\")}>\r\n                  {question.body.b[0]}\r\n                </button>\r\n                <br />\r\n                <button className=\"answer main-button alternate\"\r\n                  onClick={() => handleAnswerOptionClick(\"C\")}>\r\n                  {question.body.c[0]}\r\n                </button>\r\n                <button className=\"answer main-button \"\r\n                  onClick={() => handleAnswerOptionClick(\"D\")}>\r\n                  {question.body.d[0]}\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter(QuizSession);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport MainPage from \"./Components/MainPage/MainPage\";\r\nimport CreateQuiz from \"./Components/CreateQuiz/CreateQuiz\";\r\nimport SelectQuiz from \"./Components/SelectQuiz/SelectQuiz\";\r\nimport Quiz from \"./Components/Quiz/Quiz\";\r\nimport QuizSession from \"./Components/Quiz/QuizSession\";\r\nimport \"./App.css\";\r\nimport \"./confetti.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/' exact component={() => <MainPage />} />\r\n          <Route path='/create_quiz' exact component={() => <CreateQuiz />} />\r\n          <Route path='/select_quiz' exact component={() => <SelectQuiz />} />\r\n          <Route path='/quiz' exact component={() => <Quiz />} />\r\n          <Route path='/quiz_session' exact component={() => <QuizSession />} />\r\n        </Switch>\r\n      </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}