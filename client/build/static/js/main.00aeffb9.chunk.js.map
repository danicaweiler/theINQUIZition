{"version":3,"sources":["Components/MainPage/MainPage.js","Components/CreateQuiz/CreateQuiz.js","Components/SelectQuiz/SelectQuiz.js","Components/Quiz/Quiz.js","App.js","index.js"],"names":["withRouter","props","confettiArray","map","nums","className","id","to","CreateQuiz","state","questionList","questions","question","answerA","answerB","answerC","answerD","username","title","validator","SimpleReactValidator","onAddBtnClick","bind","submitForm","QuestionInput","setTitle","setUsername","this","hideMessages","validQuestions","push","newList","newElem","length","setState","allValid","alert","showMessages","forceUpdate","name","type","placeholder","defaultChecked","e","target","value","console","log","onChange","message","onClick","React","Component","SelectQuiz","Quiz","App","useState","response","setResponse","useEffect","axios","get","then","res","data","path","exact","component","body","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00aeffb9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport \"./confetti.css\";\r\n\r\nfunction MainPage(props) {\r\n  //set the amount of confetti\r\n  const numConfetti = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n  const confettiArray = numConfetti.map((nums) => (\r\n    <div className='confetti' key={nums} />\r\n  ));\r\n\r\n  return (\r\n    <div id='mainpage'>\r\n      <div className='confetti-container'>{confettiArray}</div>\r\n      <div className='game-header'>\r\n        <h1>The InQUIZition</h1>\r\n      </div>\r\n      <div className=\"game-body\">\r\n        <Link to='/create_quiz'>\r\n          <button className='main-button'>Build Your Own</button>\r\n        </Link>\r\n        <br />\r\n        <Link to='/select_quiz'>\r\n          <button className='main-button alternate'>\r\n            Play a Pre-built Quiz\r\n          </button>\r\n        </Link>\r\n      </div>\r\n      <div className='game-body'>\r\n        <h1 className='sub'>How it Works</h1>\r\n        <p>Build your own quiz, or use one we have made </p>\r\n        <p> Get a shareable link to send to your friends </p>\r\n        <p>The faster you answer right, the more points you get </p>\r\n        <p>\r\n          Watch the leaderboard change as you and your friends compete for the\r\n          highest score\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter(MainPage);\r\n","import React from \"react\";\r\nimport SimpleReactValidator from 'simple-react-validator';\r\n\r\nclass CreateQuiz extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      questionList: [],\r\n      questions: [ { question: \"\", answerA: \"\", answerB: \"\", answerC: \"\", answerD: \"\" } ],\r\n      username: \"\",\r\n      title: \"\"\r\n    };\r\n    \r\n  this.validator = new SimpleReactValidator();\r\n  this.onAddBtnClick = this.onAddBtnClick.bind(this);\r\n  this.submitForm = this.submitForm.bind(this);\r\n  this.QuestionInput = this.QuestionInput.bind(this);\r\n  this.setTitle = this.setTitle.bind(this);\r\n  this.setUsername = this.setUsername.bind(this);\r\n  }\r\n\r\n  onAddBtnClick() {\r\n    this.validator.hideMessages()\r\n    \r\n    var validQuestions = this.state.questions;\r\n    var newQuestionBase = { question: \"\", answerA: \"\", answerB: \"\", answerC: \"\", answerD: \"\" };\r\n    validQuestions.push(newQuestionBase);\r\n\r\n    var newList = this.state.questionList;\r\n    var newElem = this.QuestionInput(newList.length + 1)\r\n    newList.push(newElem);\r\n\r\n    this.setState({\r\n      questionList: newList,\r\n      questions: validQuestions\r\n    });\r\n  };\r\n\r\n  submitForm() {\r\n    this.validator.hideMessages();\r\n    if (this.validator.allValid()) {\r\n      alert('You submitted the form and stuff!');\r\n      //Send form data to server here\r\n      // redirect to quiz page\r\n    } else {\r\n      this.validator.showMessages();\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  QuestionInput(props) {\r\n    return (\r\n    <div key={props}>\r\n      <label>Question {props}:<br />\r\n        <input name=\"question\" type=\"text\" className=\"question-input main\" placeholder=\"Your question here\" />\r\n      </label><br />\r\n      <label><input type=\"radio\" id=\"answerA\" name= {props} defaultChecked/> A \r\n        <input name=\"A\" className=\"question-input\" placeholder=\"Your first answer here\" />\r\n      </label><br />\r\n      <label><input type=\"radio\" id=\"answerB\"  name= {props}/> B \r\n        <input name=\"B\" className=\"question-input\" placeholder=\"Your second answer here\" />\r\n      </label><br />\r\n      <label><input type=\"radio\" id=\"answerC\" name= {props}/> C \r\n        <input name=\"C\" className=\"question-input\" placeholder=\"Your third answer here\" />\r\n      </label><br />\r\n      <label><input type=\"radio\" id=\"answerD\"  name= {props} /> D \r\n        <input name=\"D\" className=\"question-input\" placeholder=\"Your fourth answer here\" />\r\n      </label><br />\r\n      <br /><br />\r\n    </div>\r\n    );\r\n  }\r\n\r\n  setTitle(e) {\r\n    this.setState({title: e.target.value});\r\n  }\r\n\r\n  setUsername(e) {\r\n    this.setState({username: e.target.value});\r\n  }\r\n\r\n  setAnswerC(e) {\r\n    console.log(e)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n  <div id=\"createQuiz\">\r\n    <div className='game-header alternate'>\r\n      <h2>The InQUIZition</h2>\r\n    </div>\r\n    <div className=\"game-body\">\r\n      <form className=\"form-body\">\r\n    <h2>Build Your Quiz</h2><div className=\"form-group\">\r\n      <label>\r\n        Username: \r\n        <input className=\"question-input\" onChange={this.setUsername} value={this.state.username} type=\"text\" name=\"username\" />\r\n        {this.validator.message('username', this.state.username, 'required|min:3|max:40')}\r\n      </label></div>\r\n    <br /><div className=\"form-group\">\r\n      <label>\r\n        Quiz Title: \r\n        <input className=\"question-input\" value={this.state.title} onChange={this.setTitle} type=\"text\" name=\"title\" />\r\n        {this.validator.message('title', this.state.title, 'required|min:3|max:120')}\r\n      </label></div>\r\n    <br /><br />\r\n    <hr /><br />\r\n    <div>\r\n      {this.state.questionList}\r\n    </div>\r\n        <button type=\"button\" className='main-button alternate' onClick={this.onAddBtnClick}>Add Question</button><br />\r\n        <button type=\"button\" className='main-button' onClick={this.submitForm}>Create!</button>\r\n    </form>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n}\r\n\r\n\r\nexport default CreateQuiz;\r\n","import React from \"react\";\r\n\r\nfunction SelectQuiz() {\r\n  return <h1>Quizzes are listed here to select</h1>;\r\n}\r\nexport default SelectQuiz;\r\n","import React from \"react\";\r\n\r\nfunction Quiz() {\r\n  return <h1>Playable Quiz Goes here</h1>;\r\n}\r\nexport default Quiz;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport MainPage from \"./Components/MainPage/MainPage\";\r\nimport CreateQuiz from \"./Components/CreateQuiz/CreateQuiz\";\r\nimport SelectQuiz from \"./Components/SelectQuiz/SelectQuiz\";\r\nimport Quiz from \"./Components/Quiz/Quiz\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  //TEMP WILL NEED TO BE MOVED INTO IT'S OWN FILE with useEffect\r\n  const [response, setResponse] = useState([]);\r\n\r\n  //This will get the reponse from the server when the component loads\r\n  useEffect(() => {\r\n    axios.get(\"/api/v1/say-something\").then((res) => {\r\n      setResponse(res.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/' exact component={() => <MainPage />} />\r\n          <Route path='/create_quiz' exact component={() => <CreateQuiz />} />\r\n          <Route path='/select_quiz' exact component={() => <SelectQuiz />} />\r\n          <Route path='/quiz' exact component={() => <Quiz />} />\r\n        </Switch>\r\n      </Router>\r\n      <hr />\r\n      <h4>Server response for testing</h4>\r\n      <p>{response.body}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}